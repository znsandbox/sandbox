<?php

namespace ZnSandbox\Sandbox\Deployer\Domain\Repositories\Shell;

use ZnSandbox\Sandbox\Deployer\Domain\Libs\App\VarProcessor;
use ZnSandbox\Sandbox\Deployer\Domain\Repositories\Shell\BaseShellDriver;

class ZnShell extends BaseShellDriver
{

    public function setDirectory(string $directory)
    {
        parent::setDirectory(VarProcessor::get('releasePath') . '/vendor/znlib/console/bin'); // TODO: Change the autogenerated stub
    }

    public function init(string $env)
    {
        return $this->runZn("init --overwrite=All", $env);
    }

    public function migrateUp(string $env = null)
    {
        return $this->runZn("db:migrate:up --withConfirm=0", $env);
    }

    public function fixtureImport(string $env = null)
    {
        return $this->runZn("db:fixture:import --withConfirm=0", $env);
    }

    public function startWebSocket(string $env = null)
    {
        return $this->runZn("socket:worker start -d", $env);
    }

    public function stopWebSocket(string $env = null)
    {
        return $this->runZn("socket:worker stop", $env);
    }

    public function statusWebSocket(string $env = null)
    {
        return $this->runZn("socket:worker status", $env);
    }

    public function runZn($command, ?string $env = null): string
    {
        $envCode = $env ? "--env=$env" : '';
//        dd($envCode);
//        $this->cd('{{releasePath}}/vendor/bin');
        return $this->runCommand("{{bin/php}} zn $command $envCode");
    }
}
